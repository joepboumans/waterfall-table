+---------------------------------------------------------------------+
|  Log file: pa.results.log                                           |
|  Compiler version: 9.11.0                                           |
|  Created on: Thu Feb 13 11:08:39 2025                               |
|  Run ID: 5c5916958a224d15                                           |
+---------------------------------------------------------------------+

Allocation state: Final Allocation
------------------------------------------------------------------------------
|       PHV Group        | Containers Used |   Bits Used   | Bits Available |
| (container bit widths) |     (% used)    |    (% used)   |                |
------------------------------------------------------------------------------
|         0 (32)         |    8 (50.00%)   |  256 (50.00%) |      512       |
|         1 (32)         |    7 (43.75%)   |  224 (43.75%) |      512       |
|         2 (32)         |    0 (0.00%)    |   0 (0.00%)   |      512       |
|         3 (32)         |    0 (0.00%)    |   0 (0.00%)   |      512       |
|    Total for 32 bit    |   15 (23.44%)   |  480 (23.44%) |      2048      |
|                        |                 |               |                |
|         4 (8)          |    6 (37.50%)   |  35 (27.34%)  |      128       |
|         5 (8)          |    2 (12.50%)   |   7 (5.47%)   |      128       |
|         6 (8)          |    0 (0.00%)    |   0 (0.00%)   |      128       |
|         7 (8)          |    0 (0.00%)    |   0 (0.00%)   |      128       |
|    Total for 8 bit     |    8 (12.50%)   |   42 (8.20%)  |      512       |
|                        |                 |               |                |
|         8 (16)         |    5 (31.25%)   |  68 (26.56%)  |      256       |
|         9 (16)         |    1 (6.25%)    |   9 (3.52%)   |      256       |
|        10 (16)         |    0 (0.00%)    |   0 (0.00%)   |      256       |
|        11 (16)         |    0 (0.00%)    |   0 (0.00%)   |      256       |
|        12 (16)         |    0 (0.00%)    |   0 (0.00%)   |      256       |
|        13 (16)         |    0 (0.00%)    |   0 (0.00%)   |      256       |
|    Total for 16 bit    |    6 (6.25%)    |   77 (5.01%)  |      1536      |
|                        |                 |               |                |
|       14 (32) T        |   15 (93.75%)   |  480 (93.75%) |      512       |
|       15 (32) T        |    0 (0.00%)    |   0 (0.00%)   |      512       |
|    Total for 32 bit    |   15 (46.88%)   |  480 (46.88%) |      1024      |
|                        |                 |               |                |
|        16 (8) T        |   11 (68.75%)   |  88 (68.75%)  |      128       |
|        17 (8) T        |    0 (0.00%)    |   0 (0.00%)   |      128       |
|    Total for 8 bit     |   11 (34.38%)   |  88 (34.38%)  |      256       |
|                        |                 |               |                |
|       18 (16) T        |   15 (93.75%)   |  240 (93.75%) |      256       |
|       19 (16) T        |    6 (37.50%)   |  96 (37.50%)  |      256       |
|       20 (16) T        |    0 (0.00%)    |   0 (0.00%)   |      256       |
|    Total for 16 bit    |   21 (43.75%)   |  336 (43.75%) |      768       |
|                        |                 |               |                |
|       MAU total        |   29 (12.95%)   |  599 (14.62%) |      4096      |
|     Tagalong total     |   47 (41.96%)   |  904 (44.14%) |      2048      |
|     Overall total      |   76 (22.62%)   | 1503 (24.46%) |      6144      |
------------------------------------------------------------------------------

--------------------------------------------
PHV Allocation
--------------------------------------------

Allocations in Group 0 32 bits
  32-bit PHV 0 (ingress): phv0[31:0] = hdr.ipv4.src_addr[31:0] (deparsed)
  32-bit PHV 1 (ingress): phv1[31:0] = ig_md.resubmit_md.remain[31:0] (deparsed)
  32-bit PHV 2 (ingress): phv2[31:0] = ig_md.remain4[31:0]
  32-bit PHV 2 (ingress): phv2[31:0] = ig_md.out_remain1[31:0]
  32-bit PHV 3 (ingress): phv3[31:0] = ig_md.out_remain2[31:0]
  32-bit PHV 4 (ingress): phv4[31:0] = ig_md.out_remain3[31:0]
  32-bit PHV 5 (ingress): phv5[31:0] = ig_md.remain1[31:0]
  32-bit PHV 6 (ingress): phv6[31:0] = ig_md.remain2[31:0]
  32-bit PHV 6 (ingress): phv6[15:0] = ig_md.idx4[15:0]
  32-bit PHV 7 (ingress): phv7[31:0] = ig_md.remain3[31:0]
  >> 8 in ingress and 0 in egress

Allocations in Group 1 32 bits
  32-bit PHV 16 (egress): phv16[31:0] = eg_md.result_d1[31:0]
  32-bit PHV 17 (egress): phv17[31:0] = $tmp24[31:0]
  32-bit PHV 18 (egress): phv18[31:0] = eg_md.result_d2[31:0]
  32-bit PHV 19 (egress): phv19[31:0] = $tmp25[31:0]
  32-bit PHV 20 (egress): phv20[31:0] = hdr.ipv4.src_addr[31:0] (deparsed)
  32-bit PHV 21 (egress): phv21[31:0] = eg_md.hash_meta_d1[31:0]
  32-bit PHV 22 (egress): phv22[31:0] = eg_md.hash_meta_d2[31:0]
  >> 0 in ingress and 7 in egress

Allocations in Group 4 8 bits
  8-bit PHV 64 (ingress): phv64[7:0] = $tmp3[7:0] (deparsed)
  8-bit PHV 65 (ingress): phv65[2:0] = ig_intr_md_for_dprsr.digest_type[2:0] (deparsed)
  8-bit PHV 66 (ingress): phv66[2:0] = ig_intr_md_for_dprsr.resubmit_type[2:0] (deparsed)
  8-bit PHV 67 (ingress): phv67[7:0] = ig_md.idx2[15:8]
  8-bit PHV 67 (ingress): phv67[2:0] = ig_intr_md_for_dprsr.mirror_type[2:0] (deparsed)
  8-bit PHV 68 (ingress): phv68[7:0] = ig_md.resubmit_md.type[7:0] (deparsed)
  8-bit PHV 69 (ingress): phv69[4:4] = ig_md.found[0:0]
  8-bit PHV 69 (ingress): phv69[3:3] = hdr.tcp.$valid[0:0] (deparsed)
  8-bit PHV 69 (ingress): phv69[2:2] = hdr.udp.$valid[0:0] (deparsed)
  8-bit PHV 69 (ingress): phv69[1:1] = hdr.ipv4.$valid[0:0] (deparsed)
  8-bit PHV 69 (ingress): phv69[0:0] = hdr.ethernet.$valid[0:0] (deparsed)
  >> 6 in ingress and 0 in egress

Allocations in Group 5 8 bits
  8-bit PHV 80 (egress): phv80[2:0] = hdr.min_parse_depth_padding_0.$stkvalid[2:0]
  8-bit PHV 80 (egress): phv80[2:2] = hdr.min_parse_depth_padding_0[0].$valid[0:0] (deparsed)
  8-bit PHV 80 (egress): phv80[1:1] = hdr.min_parse_depth_padding_0[1].$valid[0:0] (deparsed)
  8-bit PHV 80 (egress): phv80[0:0] = hdr.min_parse_depth_padding_0[2].$valid[0:0] (deparsed)
  8-bit PHV 81 (egress): phv81[3:3] = hdr.udp.$valid[0:0] (deparsed)
  8-bit PHV 81 (egress): phv81[2:2] = hdr.tcp.$valid[0:0] (deparsed)
  8-bit PHV 81 (egress): phv81[1:1] = hdr.ipv4.$valid[0:0] (deparsed)
  8-bit PHV 81 (egress): phv81[0:0] = hdr.ethernet.$valid[0:0] (deparsed)
  >> 0 in ingress and 2 in egress

Allocations in Group 8 16 bits
  16-bit PHV 128 (ingress): phv128[8:0] = ig_intr_md_for_tm.ucast_egress_port[8:0] (deparsed)
  16-bit PHV 129 (ingress): phv129[15:15] = ig_intr_md.resubmit_flag[0:0]
  16-bit PHV 129 (ingress): phv129[9:0] = $tmp2[9:0] (deparsed)
  16-bit PHV 129 (ingress): phv129[8:0] = ig_intr_md.ingress_port[8:0]
  16-bit PHV 129 (ingress): phv129[7:0] = ig_md.idx2[7:0]
  16-bit PHV 130 (ingress): phv130[15:0] = ig_md.resubmit_md.idx[15:0] (deparsed)
  16-bit PHV 131 (ingress): phv131[15:0] = ig_md.idx1[15:0]
  16-bit PHV 132 (ingress): phv132[15:0] = ig_md.idx3[15:0]
  >> 5 in ingress and 0 in egress

Allocations in Group 9 16 bits
  16-bit PHV 144 (egress): phv144[8:0] = eg_intr_md.egress_port[8:0] (deparsed)
  >> 0 in ingress and 1 in egress

Allocations in Group 14 32 bits (tagalong)
  32-bit PHV 256 (egress): phv256[31:28] = hdr.ipv4.version[3:0] (tagalong capable) (deparsed)
  32-bit PHV 256 (egress): phv256[27:24] = hdr.ipv4.ihl[3:0] (tagalong capable) (deparsed)
  32-bit PHV 256 (egress): phv256[23:16] = hdr.ipv4.diffserv[7:0] (tagalong capable) (deparsed)
  32-bit PHV 256 (egress): phv256[15:0] = hdr.ipv4.total_len[15:0] (tagalong capable) (deparsed)
  32-bit PHV 257 (egress): phv257[31:24] = hdr.ipv4.ttl[7:0] (tagalong capable) (deparsed)
  32-bit PHV 257 (egress): phv257[23:16] = hdr.ipv4.protocol[7:0] (tagalong capable) (deparsed)
  32-bit PHV 257 (egress): phv257[15:0] = hdr.ipv4.hdr_checksum[15:0] (tagalong capable) (deparsed)
  32-bit PHV 258 (egress): phv258[31:16] = hdr.ipv4.identification[15:0] (tagalong capable) (deparsed)
  32-bit PHV 258 (egress): phv258[15:13] = hdr.ipv4.flags[2:0] (tagalong capable) (deparsed)
  32-bit PHV 258 (egress): phv258[12:0] = hdr.ipv4.frag_offset[12:0] (tagalong capable) (deparsed)
  32-bit PHV 259 (egress): phv259[31:0] = hdr.min_parse_depth_padding_0[0].packet_payload[31:0] (tagalong capable) (deparsed)
  32-bit PHV 259 (egress): phv259[31:16] = hdr.tcp.checksum[15:0] (tagalong capable) (deparsed)
  32-bit PHV 259 (egress): phv259[31:16] = hdr.udp.hdr_length[15:0] (tagalong capable) (deparsed)
  32-bit PHV 259 (egress): phv259[15:0] = hdr.tcp.urgent_ptr[15:0] (tagalong capable) (deparsed)
  32-bit PHV 259 (egress): phv259[15:0] = hdr.udp.checksum[15:0] (tagalong capable) (deparsed)
  32-bit PHV 260 (ingress): phv260[31:28] = hdr.ipv4.version[3:0] (tagalong capable) (deparsed)
  32-bit PHV 260 (ingress): phv260[27:24] = hdr.ipv4.ihl[3:0] (tagalong capable) (deparsed)
  32-bit PHV 260 (ingress): phv260[23:16] = hdr.ipv4.diffserv[7:0] (tagalong capable) (deparsed)
  32-bit PHV 260 (ingress): phv260[15:0] = hdr.ipv4.total_len[15:0] (tagalong capable) (deparsed)
  32-bit PHV 261 (ingress): phv261[31:16] = hdr.udp.hdr_length[15:0] (tagalong capable) (deparsed)
  32-bit PHV 261 (ingress): phv261[31:28] = hdr.tcp.data_offset[3:0] (tagalong capable) (deparsed)
  32-bit PHV 261 (ingress): phv261[27:24] = hdr.tcp.res[3:0] (tagalong capable) (deparsed)
  32-bit PHV 261 (ingress): phv261[23:16] = hdr.tcp.flags[7:0] (tagalong capable) (deparsed)
  32-bit PHV 261 (ingress): phv261[15:0] = hdr.udp.checksum[15:0] (tagalong capable) (deparsed)
  32-bit PHV 261 (ingress): phv261[15:0] = hdr.tcp.window[15:0] (tagalong capable) (deparsed)
  32-bit PHV 262 (ingress): phv262[31:24] = hdr.ipv4.ttl[7:0] (tagalong capable) (deparsed)
  32-bit PHV 262 (ingress): phv262[23:16] = hdr.ipv4.protocol[7:0] (tagalong capable) (deparsed)
  32-bit PHV 262 (ingress): phv262[15:0] = hdr.ipv4.hdr_checksum[15:0] (tagalong capable) (deparsed)
  32-bit PHV 263 (ingress): phv263[31:16] = hdr.ipv4.identification[15:0] (tagalong capable) (deparsed)
  32-bit PHV 263 (ingress): phv263[15:13] = hdr.ipv4.flags[2:0] (tagalong capable) (deparsed)
  32-bit PHV 263 (ingress): phv263[12:0] = hdr.ipv4.frag_offset[12:0] (tagalong capable) (deparsed)
  32-bit PHV 264 (ingress): phv264[31:0] = hdr.ipv4.dst_addr[31:0] (tagalong capable) (deparsed)
  32-bit PHV 265 (ingress): phv265[31:0] = hdr.tcp.ack_no[31:0] (tagalong capable) (deparsed)
  32-bit PHV 266 (ingress): phv266[31:0] = hdr.tcp.seq_no[31:0] (tagalong capable) (deparsed)
  32-bit PHV 268 (egress): phv268[31:0] = hdr.min_parse_depth_padding_0[2].packet_payload[31:0] (tagalong capable) (deparsed)
  32-bit PHV 268 (egress): phv268[31:0] = hdr.tcp.ack_no[31:0] (tagalong capable) (deparsed)
  32-bit PHV 269 (egress): phv269[31:0] = hdr.min_parse_depth_padding_0[2].packet_payload[63:32] (tagalong capable) (deparsed)
  32-bit PHV 269 (egress): phv269[31:0] = hdr.tcp.seq_no[31:0] (tagalong capable) (deparsed)
  32-bit PHV 270 (egress): phv270[31:0] = hdr.ethernet.src_addr[31:0] (tagalong capable) (deparsed)
  32-bit PHV 271 (egress): phv271[31:0] = hdr.ethernet.dst_addr[31:0] (tagalong capable) (deparsed)
  >> 7 in ingress and 8 in egress

Allocations in Group 16 8 bits (tagalong)
  8-bit PHV 288 (egress): phv288[7:0] = hdr.min_parse_depth_padding_0[0].packet_payload[87:80] (tagalong capable) (deparsed)
  8-bit PHV 288 (egress): phv288[7:0] = hdr.tcp.window[7:0] (tagalong capable) (deparsed)
  8-bit PHV 289 (egress): phv289[7:0] = hdr.min_parse_depth_padding_0[1].packet_payload[87:80] (tagalong capable) (deparsed)
  8-bit PHV 289 (egress): phv289[7:0] = hdr.tcp.window[15:8] (tagalong capable) (deparsed)
  8-bit PHV 290 (egress): phv290[7:0] = hdr.min_parse_depth_padding_0[2].packet_payload[87:80] (tagalong capable) (deparsed)
  8-bit PHV 290 (egress): phv290[7:4] = hdr.tcp.data_offset[3:0] (tagalong capable) (deparsed)
  8-bit PHV 290 (egress): phv290[3:0] = hdr.tcp.res[3:0] (tagalong capable) (deparsed)
  8-bit PHV 291 (egress): phv291[7:0] = hdr.min_parse_depth_padding_0[0].packet_payload[71:64] (tagalong capable) (deparsed)
  8-bit PHV 291 (egress): phv291[7:0] = hdr.tcp.flags[7:0] (tagalong capable) (deparsed)
  8-bit PHV 292 (ingress): phv292[7:0] = hdr.ethernet.dst_addr[7:0] (tagalong capable) (deparsed)
  8-bit PHV 293 (ingress): phv293[7:0] = hdr.ethernet.dst_addr[15:8] (tagalong capable) (deparsed)
  8-bit PHV 294 (ingress): phv294[7:0] = hdr.ethernet.dst_addr[23:16] (tagalong capable) (deparsed)
  8-bit PHV 295 (ingress): phv295[7:0] = hdr.ethernet.dst_addr[31:24] (tagalong capable) (deparsed)
  8-bit PHV 300 (egress): phv300[7:0] = hdr.min_parse_depth_padding_0[0].packet_payload[79:72] (tagalong capable) (deparsed)
  8-bit PHV 301 (egress): phv301[7:0] = hdr.ethernet.dst_addr[39:32] (tagalong capable) (deparsed)
  8-bit PHV 302 (egress): phv302[7:0] = hdr.ethernet.dst_addr[47:40] (tagalong capable) (deparsed)
  >> 4 in ingress and 7 in egress

Allocations in Group 18 16 bits (tagalong)
  16-bit PHV 320 (egress): phv320[15:0] = hdr.min_parse_depth_padding_0[0].packet_payload[47:32] (tagalong capable) (deparsed)
  16-bit PHV 320 (egress): phv320[15:0] = hdr.tcp.dst_port[15:0] (tagalong capable) (deparsed)
  16-bit PHV 320 (egress): phv320[15:0] = hdr.udp.dst_port[15:0] (tagalong capable) (deparsed)
  16-bit PHV 321 (egress): phv321[15:0] = hdr.min_parse_depth_padding_0[0].packet_payload[63:48] (tagalong capable) (deparsed)
  16-bit PHV 321 (egress): phv321[15:0] = hdr.tcp.src_port[15:0] (tagalong capable) (deparsed)
  16-bit PHV 321 (egress): phv321[15:0] = hdr.udp.src_port[15:0] (tagalong capable) (deparsed)
  16-bit PHV 322 (egress): phv322[15:0] = hdr.min_parse_depth_padding_0[1].packet_payload[15:0] (tagalong capable) (deparsed)
  16-bit PHV 323 (egress): phv323[15:0] = hdr.min_parse_depth_padding_0[1].packet_payload[31:16] (tagalong capable) (deparsed)
  16-bit PHV 324 (egress): phv324[15:0] = hdr.min_parse_depth_padding_0[1].packet_payload[47:32] (tagalong capable) (deparsed)
  16-bit PHV 325 (egress): phv325[15:0] = hdr.min_parse_depth_padding_0[1].packet_payload[63:48] (tagalong capable) (deparsed)
  16-bit PHV 326 (ingress): phv326[15:0] = hdr.udp.dst_port[15:0] (tagalong capable) (deparsed)
  16-bit PHV 326 (ingress): phv326[15:0] = hdr.tcp.urgent_ptr[15:0] (tagalong capable) (deparsed)
  16-bit PHV 327 (ingress): phv327[15:0] = hdr.udp.src_port[15:0] (tagalong capable) (deparsed)
  16-bit PHV 327 (ingress): phv327[15:0] = hdr.tcp.checksum[15:0] (tagalong capable) (deparsed)
  16-bit PHV 328 (ingress): phv328[15:0] = hdr.tcp.dst_port[15:0] (tagalong capable) (deparsed)
  16-bit PHV 329 (ingress): phv329[15:0] = hdr.tcp.src_port[15:0] (tagalong capable) (deparsed)
  16-bit PHV 330 (ingress): phv330[15:0] = hdr.ethernet.src_addr[15:0] (tagalong capable) (deparsed)
  16-bit PHV 331 (ingress): phv331[15:0] = hdr.ethernet.src_addr[31:16] (tagalong capable) (deparsed)
  16-bit PHV 332 (ingress): phv332[15:0] = hdr.ethernet.ether_type[15:0] (tagalong capable) (deparsed)
  16-bit PHV 333 (ingress): phv333[15:0] = hdr.ethernet.src_addr[47:32] (tagalong capable) (deparsed)
  16-bit PHV 334 (ingress): phv334[15:0] = hdr.ethernet.dst_addr[47:32] (tagalong capable) (deparsed)
  >> 9 in ingress and 6 in egress

Allocations in Group 19 16 bits (tagalong)
  16-bit PHV 338 (egress): phv338[15:0] = hdr.ipv4.dst_addr[15:0] (tagalong capable) (deparsed)
  16-bit PHV 339 (egress): phv339[15:0] = hdr.ipv4.dst_addr[31:16] (tagalong capable) (deparsed)
  16-bit PHV 340 (egress): phv340[15:0] = hdr.min_parse_depth_padding_0[1].packet_payload[79:64] (tagalong capable) (deparsed)
  16-bit PHV 341 (egress): phv341[15:0] = hdr.min_parse_depth_padding_0[2].packet_payload[79:64] (tagalong capable) (deparsed)
  16-bit PHV 342 (egress): phv342[15:0] = hdr.ethernet.ether_type[15:0] (tagalong capable) (deparsed)
  16-bit PHV 343 (egress): phv343[15:0] = hdr.ethernet.src_addr[47:32] (tagalong capable) (deparsed)
  >> 0 in ingress and 6 in egress


Final POV layout (ingress):

Final POV layout (egress):
